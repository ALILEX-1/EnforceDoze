apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdk 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        namespace "com.akylas.enforcedoze"
        applicationId "com.akylas.enforcedoze"
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 69
        versionName "1.5.0"
        signingConfig signingConfigs.debug
    }
    buildTypes {
        release {
            multiDexEnabled false
            minifyEnabled true
            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

configurations.all {
    exclude group: 'com.android.support', module: 'support-v13'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation ('com.afollestad.material-dialogs:core:0.9.3.0') {
        transitive = true
    }
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha03'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.browser:browser:1.8.0-beta01'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.media2:media2-session:1.3.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'eu.chainfire:libsuperuser:1.1.0.+'
    implementation 'com.fabiendevos:nanotasks:1.1.0'
    implementation 'com.jakewharton:process-phoenix:2.1.2'
    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    implementation 'com.github.dexafree:materiallist:3.2.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

//    def libsuVersion = '6.0.0'

    // The core module that provides APIs to a shell
//    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"

    // Optional: APIs for creating root services. Depends on ":core"
//    implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"

    // Optional: Provides remote file system support
//    implementation "com.github.topjohnwu.libsu:nio:${libsuVersion}"
}
